document.addEventListener('DOMContentLoaded', function() {
    const myForm = document.getElementById('myForm');
    const submitButton = document.getElementById('submitButton');
    const statusMessage = document.getElementById('statusMessage');
    const errorMessage = document.getElementById('errorMessage');

    // Ensure all input fields are enabled on page load.
    // This explicitly undoes any potential 'disabled' state from previous logic.
    const formInputs = myForm.querySelectorAll('input, select, textarea');
    formInputs.forEach(input => {
        input.disabled = false;
        // If you had any parent divs set to display:none for these fields,
        // you would typically remove that directly in your index.html.
        // This JS line is a fallback if needed:
        // if (input.parentElement && input.parentElement.style.display === 'none') {
        //     input.parentElement.style.display = ''; // or 'block'
        // }
    });

    myForm.addEventListener('submit', function(e) {
        e.preventDefault(); // Prevent default form submission

        // Show spinner and disable button during submission
        submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...';
        submitButton.disabled = true;
        statusMessage.style.display = 'none'; // Hide any previous status messages
        errorMessage.style.display = 'none'; // Hide any previous error messages

        const formData = new FormData(this);
        const data = {};
        for (let [key, value] of formData.entries()) {
            data[key] = value;
        }

        google.script.run
            .withSuccessHandler(function(response) {
                submitButton.innerHTML = 'Submit';
                submitButton.disabled = false;
                if (response.success) {
                    document.getElementById('myForm').reset(); // Clear the form on successful submission
                    statusMessage.textContent = response.message;
                    statusMessage.style.display = 'block';
                    // Clear the status message after 5 seconds
                    setTimeout(() => {
                        statusMessage.style.display = 'none';
                    }, 5000);
                } else {
                    errorMessage.textContent = response.message;
                    errorMessage.style.display = 'block';
                    // Clear the error message after 5 seconds
                    setTimeout(() => {
                        errorMessage.style.display = 'none';
                    }, 5000);
                }
            })
            .withFailureHandler(function(error) {
                submitButton.innerHTML = 'Submit';
                submitButton.disabled = false;
                errorMessage.textContent = 'An unexpected error occurred: ' + error.message;
                errorMessage.style.display = 'block';
                // Clear the error message after 5 seconds
                setTimeout(() => {
                    errorMessage.style.display = 'none';
                }, 5000);
            })
            .processForm(data); // Call the Apps Script function
    });
});